# Tooling aligned to Home Assistant Python floor (>=3.13.2).
# NOTE: We purposely DO NOT set [tool.black].required-version to avoid CI mismatch.
# CI pins Black to 25.*; if you ever want an exact lock, set both:
#   - pyproject: required-version = "25.9.0"
#   - CI: pip install "black==25.9.0"

[project]
# Enforce the runtime floor required by HA 2025.5+.
requires-python = ">=3.13.2"

[tool.black]
line-length = 88
# Black supports py313; keep a single target since the project requires 3.13+.
target-version = ["py313"]
# Do NOT set required-version here to keep compatibility with CI's "black==25.*".

[tool.ruff]
line-length = 88
# Match runtime: Python 3.13
target-version = "py313"
# Default fix behavior when running plain `ruff`.
fix = true

[tool.ruff.lint]
# Core rule sets: pycodestyle/pyflakes/isort/pyupgrade/bugbear
select = ["E", "F", "W", "I", "UP", "B"]
ignore = [
  "E203", # Whitespace before ':' (conflicts with Black on slicing)
  "E501", # Line length (Black handles wrapping)
]

[tool.ruff.lint.isort]
# IMPORTANT: first-party must match this integration's package
known-first-party = ["custom_components.airzoneclouddaikin"]
combine-as-imports = true

# --- Optional hardening (uncomment if needed) ---
# [tool.ruff]
# force-exclude = true
# exclude = [".git", ".venv", "venv", ".mypy_cache", ".pytest_cache", "build", "dist"]

# If you re-export symbols in __init__.py and want to ignore F401 there:
# [tool.ruff.per-file-ignores]
# "custom_components/airzoneclouddaikin/__init__.py" = ["F401"]
